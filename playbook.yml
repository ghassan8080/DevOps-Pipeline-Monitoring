---
- name: Setup EC2 Environment (Docker, Kubernetes, Laravel)
  hosts: all
  become: yes
  vars:
    docker_version: "24.0.5"
    kubectl_version: "1.27.4"
    php_version: "8.2"

  tasks:
    # Update apt cache
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    # Install required packages
    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - git
        - unzip

    # Setup Docker repository
    - name: Remove old Docker sources if any
      file:
        path: /etc/apt/sources.list.d/docker.list
        state: absent

    - name: Add Docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      args:
        warn: false

    - name: Add Docker repository
      copy:
        dest: /etc/apt/sources.list.d/docker.list
        content: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"

    - name: Update apt cache after adding Docker repo
      apt:
        update_cache: yes

    - name: Install Docker
      apt:
        name: "docker-ce={{ docker_version }}*"
        state: present
        update_cache: yes

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    # Install kubectl
    - name: Add Kubernetes GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Update apt cache after adding Kubernetes repo
      apt:
        update_cache: yes

    - name: Install kubectl
      apt:
        name: "kubectl={{ kubectl_version }}-00"
        state: present

    # Install Minikube
    - name: Install Minikube
      shell: |
        if ! command -v minikube > /dev/null; then
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
        fi

    - name: Start Minikube
      shell: minikube status || minikube start --driver=docker

    # Install PHP and extensions
    - name: Add PHP repository
      apt_repository:
        repo: ppa:ondrej/php
        state: present

    - name: Update apt cache after PHP repo
      apt:
        update_cache: yes

    - name: Install PHP and extensions
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - "php{{ php_version }}"
        - "php{{ php_version }}-fpm"
        - "php{{ php_version }}-cli"
        - "php{{ php_version }}-mysql"
        - "php{{ php_version }}-mbstring"
        - "php{{ php_version }}-xml"
        - "php{{ php_version }}-curl"
        - "php{{ php_version }}-zip"

    # Install Composer
    - name: Install Composer
      shell: |
        if ! command -v composer > /dev/null; then
          curl -sS https://getcomposer.org/installer | php
          mv composer.phar /usr/local/bin/composer
          chmod +x /usr/local/bin/composer
        fi

    # Laravel storage
    - name: Ensure Laravel storage directory exists
      file:
        path: /var/www/html/storage
        state: directory
        recurse: yes
        mode: '0775'
        owner: www-data
        group: www-data

    # PHP-FPM config
    - name: Configure PHP-FPM
      template:
        src: php-fpm.conf.j2
        dest: /etc/php/{{ php_version }}/fpm/php-fpm.conf
      notify: restart php-fpm

  handlers:
    - name: restart php-fpm
      service:
        name: "php{{ php_version }}-fpm"
        state: restarted
